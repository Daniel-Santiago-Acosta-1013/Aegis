#!/usr/bin/env python3
"""
üõ°Ô∏è Aegis Pentest Automation
Automatizaci√≥n de pentesting web con CLI enriquecida

Punto de entrada principal del sistema
"""

import sys
import asyncio
import logging
from pathlib import Path

# Agregar directorio ra√≠z al path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from aegis_pentest.cli.main_cli import AegisCLI
from aegis_pentest.utils.config import Config


def setup_logging():
    """Configura el sistema de logging"""
    config = Config()
    log_level = config.get('logging.level', 'INFO')
    log_file = config.get('logging.file', str(Path.home() / '.aegis' / 'aegis.log'))
    
    # Crear directorio de logs si no existe
    Path(log_file).parent.mkdir(parents=True, exist_ok=True)
    
    logging.basicConfig(
        level=getattr(logging, log_level.upper()),
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.FileHandler(log_file),
            logging.StreamHandler()
        ]
    )


async def main_cli():
    """Funci√≥n principal para CLI interactiva"""
    try:
        # Configurar logging
        setup_logging()
        logger = logging.getLogger(__name__)
        logger.info("Iniciando Aegis Pentest Automation CLI")
        
        # Crear e iniciar CLI
        cli_app = AegisCLI()
        await cli_app.run()
        
        logger.info("Aegis CLI cerrado correctamente")
        
    except KeyboardInterrupt:
        print("\n[yellow]üëã Sesi√≥n interrumpida por el usuario[/yellow]")
        sys.exit(0)
    except Exception as e:
        logging.error(f"Error fatal en main_cli: {str(e)}")
        print(f"‚ùå Error fatal: {str(e)}")
        sys.exit(1)


def main():
    """Punto de entrada principal para poetry scripts"""
    asyncio.run(main_cli())


if __name__ == '__main__':
    main() 